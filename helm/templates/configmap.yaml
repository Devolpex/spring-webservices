apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helm.fullname" . }}-config
  labels:
    {{- include "helm.labels" . | nindent 4 }}
data:
  application.yml: |
    spring:
      config:
        activate:
          on-profile:
          - dev
      application:
        name: backend

      # Database Configuration
      datasource:
        url: ${DB_URL}
        username: ${DB_USER}
        password: ${DB_PASSWORD}
        driver-class-name: org.postgresql.Driver

      # JPA & Hibernate
      jpa:
        hibernate:
          ddl-auto: create  # Use 'update' for production, 'create' for dev
        show-sql: true      # Show SQL queries in logs
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect

      # GraphiQL Playground
      graphiql:
        endpoint: /graphql
        enabled: true

    # Server Configuration
    server:
      port: 8080  # REST API port

    # gRPC Configuration
    grpc:
      server:
        port: 9000  # gRPC service port

    # Logging Configuration
    logging:
      org.springframework.web: TRACE  # Set TRACE for web logs

    # Swagger/OpenAPI Configuration
    swagger:
      api-docs:
        path: /v3/api-docs
      swagger-ui:
        path: /swagger-ui.html

    # Spring Boot Actuator & Monitoring
    management:
      server:
        port: 8090  # Actuator port
      endpoints:
        web:
          exposure:
            include: health, info, metrics, prometheus  # Expose endpoints for Prometheus/Grafana
      metrics:
        distribution:
          percentiles-histogram:
            http.server.requests: true  # Enable histogram for HTTP request metrics
      observations:
        key-values:
          application: backend  # Application name for metrics/tracing
      tracing:
        sampling:
          probability: 1.0  # Trace all requests
      prometheus:
        enabled: true  # Enable Prometheus metrics

    # CORS Configuration
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS}
