
services:

  mysql-db:
    image: mysql:8.0
    container_name: ace_hotel_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hotel_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3311:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - hotel-network
  # hotel-backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   # image:
  #   container_name: ace_hotel_backend
  #   environment:
  #     DB_HOST: mysql-db
  #     DB_PORT: 3306
  #     DB_NAME: hotel_db
  #     DB_USER: user
  #     DB_PASSWORD: password
  #     CORS_ALLOWED_ORIGINS: http://localhost:5173
  #     SPRING_PROFILES_ACTIVE: docker # Active Spring profile
  #   ports:
  #     - "8082:8082"  # Exposing backend API
  #     - "9099:9099"  # Exposing gRPC service
  #   depends_on:
  #     - mysql-db  # Ensures MySQL starts before the backend
  #   networks:
  #     - hotel-network

  loki:
    image: grafana/loki:main
    command: ["-config.file=/etc/loki/local-config.yaml"]
    ports:
      - "3100:3100"
  prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
  tempo:
    image: grafana/tempo:2.2.2
    command: [ '-config.file=/etc/tempo.yaml' ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - '3110:3100' # Tempo
      - '9411:9411' # zipkin
  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'
volumes:
  db_data:


networks:
  hotel-network:
    driver: bridge